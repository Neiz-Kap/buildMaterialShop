[{"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/index.js":"1","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/App.js":"2","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/DeviceStore.js":"3","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/UserStore.js":"4","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/AppRouter.js":"5","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/userAPI.js":"6","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/NavBar.js":"7","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/routes.js":"8","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/index.js":"9","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/utils/consts.js":"10","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Admin.js":"11","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Auth.js":"12","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/DevicePage.js":"13","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Basket.js":"14","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Shop.js":"15","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/deviceAPI.js":"16","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceList.js":"17","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/TypeBar.js":"18","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/Pages.js":"19","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/BrandBar.js":"20","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceItem.js":"21","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateType.js":"22","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateDevice.js":"23","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateBrand.js":"24","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/index.js":"25","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/App.js":"26","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/store/UserStore.js":"27","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/store/DeviceStore.js":"28","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/AppRouter.js":"29","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/NavBar.js":"30","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/http/userAPI.js":"31","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/routes.js":"32","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/http/index.js":"33","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/utils/consts.js":"34","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/DevicePage.js":"35","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Shop.js":"36","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Auth.js":"37","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Basket.js":"38","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Admin.js":"39","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/Pages.js":"40","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/http/deviceAPI.js":"41","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/DeviceList.js":"42","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/BrandBar.js":"43","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/TypeBar.js":"44","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/modals/CreateType.js":"45","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/modals/CreateDevice.js":"46","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/modals/CreateBrand.js":"47","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/DeviceItem.js":"48"},{"size":439,"mtime":1636473457101,"results":"49","hashOfConfig":"50"},{"size":872,"mtime":1637154689423,"results":"51","hashOfConfig":"50"},{"size":1298,"mtime":1636473457105,"results":"52","hashOfConfig":"50"},{"size":401,"mtime":1636473457105,"results":"53","hashOfConfig":"50"},{"size":938,"mtime":1637155567098,"results":"54","hashOfConfig":"50"},{"size":687,"mtime":1637154282814,"results":"55","hashOfConfig":"50"},{"size":2388,"mtime":1637229546020,"results":"56","hashOfConfig":"50"},{"size":736,"mtime":1637155530068,"results":"57","hashOfConfig":"50"},{"size":407,"mtime":1636473457101,"results":"58","hashOfConfig":"50"},{"size":228,"mtime":1637228119572,"results":"59","hashOfConfig":"50"},{"size":2224,"mtime":1637223051072,"results":"60","hashOfConfig":"50"},{"size":2665,"mtime":1637164979205,"results":"61","hashOfConfig":"50"},{"size":3135,"mtime":1637164681097,"results":"62","hashOfConfig":"50"},{"size":220,"mtime":1637229480459,"results":"63","hashOfConfig":"50"},{"size":1270,"mtime":1637159436069,"results":"64","hashOfConfig":"50"},{"size":995,"mtime":1636473457101,"results":"65","hashOfConfig":"50"},{"size":484,"mtime":1637163180379,"results":"66","hashOfConfig":"50"},{"size":690,"mtime":1637092558460,"results":"67","hashOfConfig":"50"},{"size":801,"mtime":1636473457081,"results":"68","hashOfConfig":"50"},{"size":695,"mtime":1637165751248,"results":"69","hashOfConfig":"50"},{"size":1065,"mtime":1637165498683,"results":"70","hashOfConfig":"50"},{"size":1176,"mtime":1637223050938,"results":"71","hashOfConfig":"50"},{"size":5702,"mtime":1637223043595,"results":"72","hashOfConfig":"50"},{"size":1193,"mtime":1637085139186,"results":"73","hashOfConfig":"50"},{"size":439,"mtime":1636473457101,"results":"74","hashOfConfig":"75"},{"size":1076,"mtime":1637297165973,"results":"76","hashOfConfig":"75"},{"size":401,"mtime":1636473457105,"results":"77","hashOfConfig":"75"},{"size":1132,"mtime":1637481370879,"results":"78","hashOfConfig":"75"},{"size":938,"mtime":1637155567098,"results":"79","hashOfConfig":"75"},{"size":3089,"mtime":1637493396471,"results":"80","hashOfConfig":"75"},{"size":687,"mtime":1637251752588,"results":"81","hashOfConfig":"75"},{"size":736,"mtime":1637155530068,"results":"82","hashOfConfig":"75"},{"size":407,"mtime":1636473457101,"results":"83","hashOfConfig":"75"},{"size":228,"mtime":1637228119572,"results":"84","hashOfConfig":"75"},{"size":2843,"mtime":1637825958172,"results":"85","hashOfConfig":"75"},{"size":1627,"mtime":1637491878110,"results":"86","hashOfConfig":"75"},{"size":2720,"mtime":1637397723804,"results":"87","hashOfConfig":"75"},{"size":220,"mtime":1637229480459,"results":"88","hashOfConfig":"75"},{"size":4261,"mtime":1637826364038,"results":"89","hashOfConfig":"75"},{"size":709,"mtime":1637491768044,"results":"90","hashOfConfig":"75"},{"size":982,"mtime":1637491676112,"results":"91","hashOfConfig":"75"},{"size":692,"mtime":1637491990445,"results":"92","hashOfConfig":"75"},{"size":1259,"mtime":1637482237478,"results":"93","hashOfConfig":"75"},{"size":1304,"mtime":1637482208486,"results":"94","hashOfConfig":"75"},{"size":1188,"mtime":1637420791899,"results":"95","hashOfConfig":"75"},{"size":6434,"mtime":1637423941162,"results":"96","hashOfConfig":"75"},{"size":1194,"mtime":1637422695982,"results":"97","hashOfConfig":"75"},{"size":1265,"mtime":1637493588499,"results":"98","hashOfConfig":"75"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"10c0yic",{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"101"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"101"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"101"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"101"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"101"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"101"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},"2rorqx",{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"159"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"159"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"159"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"190","messages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"159"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"200","messages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"159"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"159"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"159"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"159"},"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/index.js",[],["216","217"],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/App.js",["218"],"import React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer(() => {\n  const { user } = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      console.log(`data`, JSON.stringify(data, null, 2))\n      user.setUser(data)\n      user.setIsAuth(true)\n    }).finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return <Spinner animation={\"grow\"} />\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/DeviceStore.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/store/UserStore.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/AppRouter.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/userAPI.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/NavBar.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/routes.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/index.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/utils/consts.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Admin.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Auth.js",["219"],"import React, { useContext, useState } from 'react';\nimport { Container, Form } from \"react-bootstrap\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Row from \"react-bootstrap/Row\";\nimport { NavLink, useLocation, useHistory } from \"react-router-dom\";\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from \"../utils/consts\";\nimport { login, registration } from \"../http/userAPI\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\n\nconst Auth = observer(() => {\n  const { user } = useContext(Context)\n  const location = useLocation()\n  const history = useHistory()\n  const isLogin = location.pathname === LOGIN_ROUTE\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const click = async () => {\n    try {\n      let data;\n      if (isLogin) {\n        data = await login(email, password);\n      } else {\n        data = await registration(email, password);\n      }\n      user.setUser(user)\n      user.setIsAuth(true)\n      history.push(SHOP_ROUTE)\n    } catch (e) {\n      alert(e.response.data.message)\n    }\n\n  }\n\n  return (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ height: window.innerHeight - 54 }}\n    >\n      <Card style={{ width: 400 }} className=\"p-4\">\n        <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : \"Регистрация\"}</h2>\n        <Form className=\"d-flex flex-column\">\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш email...\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n          <Form.Control\n            className=\"mt-3\"\n            placeholder=\"Введите ваш пароль...\"\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n          <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\n            {isLogin ?\n              <div>\n                Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрируйся!</NavLink>\n              </div>\n              :\n              <div>\n                Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\n              </div>\n            }\n            <Button\n              variant={\"outline-success\"}\n              onClick={click}\n              className=\"mt-3\"\n            >\n              {isLogin ? 'Войти' : 'Регистрация'}\n            </Button>\n          </Row>\n\n        </Form>\n      </Card>\n    </Container>\n  );\n});\n\nexport default Auth;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/DevicePage.js",["220","221","222","223","224","225","226","227","228","229","230","231","232","233"],"import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Image, Row, ListGroup } from \"react-bootstrap\";\nimport bigStar from '../assets/bigStar.png'\nimport { useParams } from 'react-router-dom'\nimport { fetchOneDevice } from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n  const [device, setDevice] = useState({ info: [] })\n  const { id } = useParams()\n  useEffect(() => {\n    fetchOneDevice(id).then(data => setDevice(data))\n  }, [])\n\n  return (\n    <Container className=\"mt-3\">\n      <Row>\n        <Col\n          xl={4} md={5}\n        >\n          <Image\n            src={process.env.REACT_APP_API_URL + device.img} />\n        </Col>\n        <Col\n          xl={5} md={7}\n        >\n          <Card\n            border=\"light\"\n            className=\"d-flex flex-column p-2 h-100\"\n          >\n            <h1>{device.name} </h1>\n            <h2 className=\"text-primary\">{device.price} руб.</h2>\n            <p style={{ fontSize: '16px' }}>Осталось на складе: {device.count} шт.</p>\n            <Button variant={\"outline-dark\"}>Добавить в корзину</Button>\n          </Card>\n        </Col>\n        <Col xl={3} className=\"d-none d-xl-block\">\n          <div className='scubacontext mx-auto'>\n            <p className=\"text-uppercase text-center\">Scuba shop это</p>\n            <ListGroup style={{ marginTop: '25px' }}>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons1.jpg\" /></a>\n                <a href=\"#\">Только “белое” оборудование</a>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons2.jpg\" /></a>\n                <a href=\"#\">Доставка по регионам РФ</a>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons3.jpg\" /></a>\n                <a href=\"#\">Покупка в кредит</a>\n              </ListGroup.Item>\n              <ListGroup.Item className=\"d-flex\">\n                <a href=\"#\"><img src=\"https://scuba-shop.ru/templates/images/fineicons4.jpg\" /></a>\n                <a href=\"#\">Гарантийное обслуживание</a>\n              </ListGroup.Item>\n            </ListGroup>\n          </div>\n        </Col>\n      </Row>\n      <Row className=\"m-3\">\n        <Col md={6}>\n          <h2>Описание </h2>\n          <p style={{ fontSize: '16px' }}>{device.description} </p>\n        </Col>\n        {\n          device.info &&\n          <Col md={6}>\n            <h2>Характеристики</h2>\n            <ListGroup>\n              {device.info.map((info, index) =>\n                <ListGroup.Item key={info.id} style={{ padding: 10 }}>\n                  {info.title}: {info.description}\n                </ListGroup.Item>\n              )}\n            </ListGroup>\n          </Col>\n        }\n\n      </Row>\n    </Container >\n  );\n};\n\nexport default DevicePage;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Basket.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/pages/Shop.js",["234","235","236","237"],"import React, { useContext, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n  const { device } = useContext(Context)\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n    fetchDevices(null, null, 1, 2).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [])\n\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 2).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [device.page, device.selectedType, device.selectedBrand,])\n\n  return (\n    <Container>\n      <TypeBar />\n      <BrandBar />\n      <DeviceList />\n      <Pages />\n    </Container>\n  );\n});\n\nexport default Shop;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/http/deviceAPI.js",["238"],"import {$authHost, $host} from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n    const {data} = await $authHost.post('api/type', type)\n    return data\n}\n\nexport const fetchTypes = async () => {\n    const {data} = await $host.get('api/type')\n    return data\n}\n\nexport const createBrand = async (brand) => {\n    const {data} = await $authHost.post('api/brand', brand)\n    return data\n}\n\nexport const fetchBrands = async () => {\n    const {data} = await $host.get('api/brand', )\n    return data\n}\n\nexport const createDevice = async (device) => {\n    const {data} = await $authHost.post('api/device', device)\n    return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit= 5) => {\n    const {data} = await $host.get('api/device', {params: {\n            typeId, brandId, page, limit\n        }})\n    return data\n}\n\nexport const fetchOneDevice = async (id) => {\n    const {data} = await $host.get('api/device/' + id)\n    return data\n}\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceList.js",["239"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Row } from \"react-bootstrap\";\nimport DeviceItem from \"./DeviceItem\";\n\nconst DeviceList = observer(() => {\n  const { device } = useContext(Context)\n\n  return (\n    <Row className=\"d-flex\" className=\"g-3\">\n      {device.devices.map(device =>\n        <DeviceItem key={device.id} device={device} />\n      )}\n    </Row>\n  );\n});\n\nexport default DeviceList;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/TypeBar.js",["240"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nconst TypeBar = observer(() => {\n  const { device } = useContext(Context)\n  return (\n    <ListGroup horizontal className=\"my-2\">\n      {device.types.map(type =>\n        <ListGroup.Item\n          style={{ cursor: 'pointer' }}\n          active={type.id === device.selectedType.id}\n          onClick={() => device.setSelectedType(type)}\n          key={type.id}\n        >\n          {type.name}\n        </ListGroup.Item>\n      )}\n    </ListGroup>\n  );\n});\n\nexport default TypeBar;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/Pages.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/BrandBar.js",["241"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { Card, ListGroup } from \"react-bootstrap\";\n\nconst BrandBar = observer(() => {\n  const { device } = useContext(Context)\n\n  return (\n    <ListGroup horizontal className=\"d-flex my-2\">\n      {device.brands.map(brand =>\n        <ListGroup.Item\n          style={{ cursor: 'pointer' }}\n          key={brand.id}\n          className=\"p-3\"\n          onClick={() => device.setSelectedBrand(brand)}\n          active={brand.id === device.selectedBrand.id}\n        >\n          {brand.name}\n        </ListGroup.Item>\n      )}\n    </ListGroup>\n  );\n});\n\nexport default BrandBar;\n","/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/DeviceItem.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateType.js",[],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateDevice.js",["242","243"],"/home/tyhroilinux/Projects/FullStack/scuba_shop/client/src/components/modals/CreateBrand.js",["244"],"import React, { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { createBrand, createType } from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({ show, onHide }) => {\n  const [value, setValue] = useState('')\n\n  const addBrand = () => {\n    createBrand({ name: value }).then(data => {\n      setValue('')\n      onHide()\n    })\n  }\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить производителя\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            placeholder={\"Введите производителя\"}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CreateBrand;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/index.js",[],["245","246"],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/App.js",["247"],"import React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"./index\";\nimport { check } from \"./http/userAPI\";\nimport { Spinner } from \"react-bootstrap\";\n\nconst App = observer(() => {\n  const { user } = useContext(Context)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    check().then(data => {\n      console.log(`data`, JSON.stringify(data, null, 2))\n      user.setUser(data)\n      user.setIsAuth(true)\n    }).finally(() => setLoading(false))\n  }, [])\n\n  if (loading) {\n    return (\n      <div className=\"spinner-block d-flex justify-content-center align-items-center\">\n        <Spinner className=\"mr-2\" animation=\"border\" role=\"status\" aria-hidden />\n        <strong>Загрузка...</strong>\n      </div>\n    )\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/store/UserStore.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/store/DeviceStore.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/AppRouter.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/NavBar.js",["248"],"import React, { useContext } from 'react';\nimport { Context } from \"../index\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport { ADMIN_ROUTE, LOGIN_ROUTE, SHOP_ROUTE, BASKET_ROUTE } from \"../utils/consts\";\nimport { Container, Button, Form, Nav, Navbar } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\n\nimport logo from \"../assets/logo.svg\"\nimport search from \"../assets/search.svg\"\nimport basket from \"../assets/basket.svg\"\n\nconst NavBar = observer(() => {\n  const { user } = useContext(Context)\n  const history = useHistory()\n\n  const logOut = () => {\n    user.setUser({})\n    user.setIsAuth(false)\n  }\n\n  const clickSearch = (e) => {\n    e.preventDefault()\n  }\n\n  console.log(`user: ${JSON.stringify(user.user.role, null, 2)}`)\n\n  return (\n    <Navbar\n      // bg=\"primary\" variant=\"primary\"\n      // style={{ backgroundColor: \"#5586a7\" }}\n      className=\"border-bottom py-4\"\n    >\n      <Container fluid>\n        <Navbar.Brand className=\"d-flex align-items-center\">\n          <NavLink to={SHOP_ROUTE} >\n            <img\n              src={logo}\n              className=\"mr-5\"\n              alt=\"Logo\"\n            />\n          </NavLink>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\" className=\"w-100\">\n          <Nav\n            className=\"w-100\"\n          >\n            <Form className=\"d-flex navbar-seacrh w-100 m-auto\">\n              <input className=\"navbar--search__input w-100\" type=\"text\" autocomplete=\"off\" name=\"search\" placeholder=\"Поиск\" value=\"\" />\n              <button className=\"navbar--search__button\" title=\"Искать\" type=\"submit\"\n                onClick={clickSearch}\n              >\n                <img src={search} alt=\"поиск\" />\n              </button>\n            </Form>\n          </Nav>\n        </Navbar.Collapse>\n        {user.isAuth ?\n          <Nav className=\"ml-3\">\n            {user.user.role === 'ADMIN' &&\n              <NavLink className=\"py-2 mx-2\" to={ADMIN_ROUTE}>\n                Админпанель\n              </NavLink>\n            }\n            <NavLink className=\"mr-2 d-flex align-items-center\" to={BASKET_ROUTE}>\n              <span className=\"navbar-basket__icon\">\n                <img src={basket} alt=\"корзина\" />\n              </span>\n              <span className=\"c1hh5p11 d-flex flex-column\">\n                <span className=\"navbar-basket__text\">Корзина</span>\n                <span className=\"navbar-basket__price\">0 ₽</span>\n              </span>\n            </NavLink>\n\n            {/* <Button\n              variant={\"outline-dark\"}\n              onClick={() => logOut()}\n              className=\"ml-2\"\n            >\n              Выйти\n            </Button> */}\n          </Nav>\n          :\n          <Nav className=\"ml-auto\" style={{ color: 'white' }}>\n            <Button variant={\"outline-dark\"} onClick={() => history.push(LOGIN_ROUTE)}>Авторизация</Button>\n          </Nav>\n        }\n      </Container>\n    </Navbar>\n\n  );\n});\n\nexport default NavBar;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/http/userAPI.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/routes.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/http/index.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/utils/consts.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/DevicePage.js",["249"],"import React, { useEffect, useState } from 'react';\nimport { Button, Card, Col, Container, Image, Row, ListGroup } from \"react-bootstrap\";\nimport { useParams } from 'react-router-dom'\nimport { fetchOneDevice } from \"../http/deviceAPI\";\n\nconst DevicePage = () => {\n  const [productsCount, setProductsCount] = useState(0)\n  const [device, setDevice] = useState({ info: [] })\n  const { id } = useParams()\n  useEffect(() => {\n    fetchOneDevice(id).then(data => {\n      setDevice(data)\n      setProductsCount(data.count)\n    })\n  }, [])\n\n  return (\n    <Container className=\"mt-3\" fluid>\n      <Row>\n        <Col\n          xl={4} md={7}\n        >\n          <Image\n            src={process.env.REACT_APP_API_URL + device.img}\n            rounded />\n        </Col>\n        <Col\n          xl={8} md={5}\n        >\n          <h1>{device.name} </h1>\n          <Row className=\"device__info\">\n            {\n              device.info &&\n              <Col lg={6}>\n                <h2>Характеристики</h2>\n                <ListGroup className=\"device__list\">\n                  {device.info.map((info, index) =>\n                    <ListGroup.Item key={info.id} className=\"d-flex justify-content-between border-0\" style={{ padding: \"10px 0px\" }}>\n                      <span className=\"device-info__name pr-1 text-secondary\">{info.title}</span> <div className=\"device-info__value text-secondary pl-1\">{info.description}</div>\n                    </ListGroup.Item>\n                  )}\n                </ListGroup>\n              </Col>\n            }\n            <Col lg={6} className=\"device-info__buy mb-2\">\n              <Card\n                border=\"light\"\n                className=\"device-info__card d-flex flex-column h-100\"\n              >\n                <small className=\"text-secondary mb-2\">Цена за шт.</small>\n                <h2 className=\"text-dark mb-2\">{device.price} руб.</h2>\n                {\n                  productsCount ?\n                    <>\n                      <Button className=\"mb-2 device-card__btn\" variant={\"warning\"}\n                        onClick={() => setProductsCount(productsCount => productsCount - 1)}\n                      >Добавить в корзину</Button>\n                      <p style={{ fontSize: '16px' }}>Осталось на складе: {productsCount} шт.</p>\n                    </>\n                    :\n                    <Button className=\"mb-1 device-card__btn\" variant={\"secondary\"}>Нет в наличии</Button>\n                }\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n      </Row >\n      <Row className=\"my-3\">\n        <Col md={6}>\n          <h2>Описание </h2>\n          <p style={{ fontSize: '16px' }}>{device.description} </p>\n        </Col>\n      </Row>\n    </Container >\n  );\n};\n\nexport default DevicePage;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Shop.js",["250","251"],"import React, { useContext, useEffect } from 'react';\nimport { Container, Accordion, Row, Col } from \"react-bootstrap\";\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { fetchBrands, fetchDevices, fetchTypes } from \"../http/deviceAPI\";\nimport TypeBar from \"../components/TypeBar\";\nimport BrandBar from \"../components/BrandBar\";\nimport DeviceList from \"../components/DeviceList\";\nimport Pages from \"../components/Pages\";\n\nconst Shop = observer(() => {\n  const { device } = useContext(Context)\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n    fetchDevices(null, null, 1, 2).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [])\n\n  useEffect(() => {\n    fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 8).then(data => {\n      device.setDevices(data.rows)\n      device.setTotalCount(data.count)\n    })\n  }, [device.page, device.selectedType, device.selectedBrand])\n\n  return (\n    <Container fluid\n      className=\"py-3 px-4\"\n      style={{ backgroundColor: \"#f9f9f9\" }}\n    >\n      <Row className=\"mt-2\">\n        <Col md={2}>\n          <Accordion defaultActiveKey=\"0\">\n            <TypeBar />\n            <BrandBar />\n          </Accordion>\n        </Col>\n        <Col md={9}>\n          <DeviceList />\n          <Pages />\n        </Col>\n      </Row>\n    </Container>\n    // <Container fluid>\n    //   <TypeBar />\n    //   <BrandBar />\n    //   <DeviceList />\n    //   <Pages />\n    // </Container>\n  );\n});\n\nexport default Shop;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Auth.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Basket.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/pages/Admin.js",["252"],"import React, { useState, useContext, useEffect } from 'react';\nimport { Button, Container, Row, Col, Form, Dropdown } from \"react-bootstrap\";\nimport { Context } from \"../index\";\nimport CreateBrand from \"../components/modals/CreateBrand\";\nimport CreateDevice from \"../components/modals/CreateDevice\";\nimport CreateType from \"../components/modals/CreateType\";\nimport { fetchBrands, fetchTypes } from \"../http/deviceAPI\";\nimport { observer } from 'mobx-react-lite';\n\nconst Admin = observer((props) => {\n  const { device } = useContext(Context)\n  const [brandVisible, setBrandVisible] = useState(false)\n  const [typeVisible, setTypeVisible] = useState(false)\n  const [deviceVisible, setDeviceVisible] = useState(false)\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n\n    fetchBrands().then(data => device.setBrands(data))\n  }, [])\n\n  const clickDropDownTypes = () => {\n    fetchTypes().then(data => device.setTypes(data))\n  }\n\n  const clickDropDownBrands = () => {\n    fetchBrands().then(data => device.setBrands(data))\n  }\n\n  console.log(`____________`);\n  // console.log(`device.brand`, JSON.stringify(device.brands, null, 2))\n  // console.log(`device.types`, JSON.stringify(device.types, null, 2))\n  return (\n    <Container className=\"d-flex flex-column\">\n      <Row>\n        <Col md=\"4\" className=\"mt-3 d-flex flex-column align-items-center\">\n          <Form.Label className=\"d-block mb-3\">Строительные материалы</Form.Label>\n          <Button\n            variant={\"outline-primary\"}\n            className=\"p-2 d-block\"\n            onClick={() => setDeviceVisible(true)}\n          >\n            Добавить товар\n          </Button>\n          <Button variant=\"outline-danger\"\n            className=\"mt-2 p-2 d-block\"\n          >\n            Удалить товар\n          </Button>\n        </Col>\n\n        <Col md=\"4\" className=\"mt-3 d-flex flex-column align-items-center\">\n          <Form.Label className=\"d-block mb-3\">Категории стройматериалов</Form.Label>\n          <Button\n            variant={\"outline-primary\"}\n            className=\"p-2 d-block\"\n            onClick={() => setTypeVisible(true)}\n          >\n            Добавить категорию\n          </Button>\n          <Button variant=\"outline-danger\"\n            className=\"p-2 mt-2 d-block\"\n          >\n            Удалить категорию\n          </Button>\n          <Dropdown className=\"mt-2\" onClick={clickDropDownTypes}>\n            <Dropdown.Toggle variant=\"info\">{\"Все категории\"}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.types.map(type =>\n                <Dropdown.Item\n                  key={type.id}\n                >\n                  {type.name}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n\n        <Col md=\"4\" className=\"mt-3 d-flex flex-column align-items-center\">\n          <Form.Label className=\"d-block mb-3\">Поставщики</Form.Label>\n          <Button\n            variant={\"outline-primary\"}\n            className=\"p-2 d-block\"\n            onClick={() => setBrandVisible(true)}\n          >\n            Добавить поставщика\n          </Button>\n          <Button variant=\"outline-danger\"\n            className=\"mt-2 p-2 d-block\"\n          >\n            Удалить поставщика\n          </Button>\n          <Dropdown className=\"mt-2\" onClick={clickDropDownBrands}>\n            <Dropdown.Toggle variant=\"info\">{\"Все поставщики\"}</Dropdown.Toggle>\n            <Dropdown.Menu>\n              {device.brands.map(brand =>\n                <Dropdown.Item\n                  key={brand.id}\n                >\n                  {brand.name}\n                </Dropdown.Item>\n              )}\n            </Dropdown.Menu>\n          </Dropdown>\n        </Col>\n\n\n        {brandVisible && <CreateBrand show={brandVisible} onHide={() => setBrandVisible(false)} />}\n        {deviceVisible && <CreateDevice show={deviceVisible} onHide={() => setDeviceVisible(false)} />}\n        {typeVisible && <CreateType show={typeVisible} onHide={() => setTypeVisible(false)} />}\n      </Row>\n    </Container >\n  );\n});\n\nexport default Admin;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/Pages.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/http/deviceAPI.js",["253"],"import { $authHost, $host } from \"./index\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createType = async (type) => {\n  const { data } = await $authHost.post('api/type', type)\n  return data\n}\n\nexport const fetchTypes = async () => {\n  const { data } = await $host.get('api/type')\n  return data\n}\n\nexport const createBrand = async (brand) => {\n  const { data } = await $authHost.post('api/brand', brand)\n  return data\n}\n\nexport const fetchBrands = async () => {\n  const { data } = await $host.get('api/brand',)\n  return data\n}\n\nexport const createDevice = async (device) => {\n  const { data } = await $authHost.post('api/device', device)\n  return data\n}\n\nexport const fetchDevices = async (typeId, brandId, page, limit = 12) => {\n  const { data } = await $host.get('api/device', {\n    params: {\n      typeId, brandId, page, limit\n    }\n  })\n  return data\n}\n\nexport const fetchOneDevice = async (id) => {\n  const { data } = await $host.get('api/device/' + id)\n  return data\n}\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/DeviceList.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/BrandBar.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/TypeBar.js",["254"],"import React, { useContext } from 'react';\nimport { observer } from \"mobx-react-lite\";\nimport { Context } from \"../index\";\nimport { ListGroup, Accordion } from \"react-bootstrap\";\n\nconst TypeBar = observer(() => {\n  const { device } = useContext(Context)\n  console.log(`device.selectedType == {}`, device.selectedType == {})\n  console.log(`device.selectedType`, JSON.stringify(device.selectedType, null, 2))\n  return (\n    <Accordion.Item eventKey=\"0\">\n      <Accordion.Header>Категории</Accordion.Header>\n      <Accordion.Body className=\"p-0\">\n        <ListGroup className=\"my-2\">\n          <ListGroup.Item\n            style={{ cursor: 'pointer' }}\n            active={Object.entries(device.selectedType).length === 0}\n            onClick={() => device.setSelectedType({})}\n            key={'unic'}\n          >\n            Все\n          </ListGroup.Item>\n          {device.types.map(type =>\n            <ListGroup.Item\n              style={{ cursor: 'pointer' }}\n              active={type.id === device.selectedType.id}\n              onClick={() => device.setSelectedType(type)}\n              key={type.id}\n            >\n              {type.name}\n            </ListGroup.Item>\n          )}\n        </ListGroup>\n      </Accordion.Body>\n    </Accordion.Item>\n  );\n});\n\nexport default TypeBar;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/modals/CreateType.js",[],"/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/modals/CreateDevice.js",["255"],"import React, { useContext, useEffect, useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Dropdown, Form, Row, Col, FloatingLabel } from \"react-bootstrap\";\nimport { Context } from \"../../index\";\nimport { createDevice, fetchBrands, fetchTypes } from \"../../http/deviceAPI\";\nimport { observer } from \"mobx-react-lite\";\n\nconst CreateDevice = observer(({ show, onHide }) => {\n  const { device } = useContext(Context)\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [price, setPrice] = useState('')\n  const [count, setCount] = useState('')\n  const [file, setFile] = useState(null)\n  const [info, setInfo] = useState([])\n\n  useEffect(() => {\n    fetchTypes().then(data => device.setTypes(data))\n    fetchBrands().then(data => device.setBrands(data))\n  }, [])\n\n  const addInfo = () => {\n    setInfo([...info, { title: '', description: '', number: Date.now() }])\n  }\n  const removeInfo = (number) => {\n    setInfo(info.filter(i => i.number !== number))\n  }\n  const changeInfo = (key, value, number) => {\n    setInfo(info.map(i => i.number === number ? { ...i, [key]: value } : i))\n  }\n\n  const selectFile = e => {\n    setFile(e.target.files[0])\n  }\n\n  const addDevice = () => {\n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('description', description)\n    formData.append('price', `${price}`)\n    formData.append('count', `${count}`)\n    formData.append('img', file)\n    formData.append('brandId', device.selectedBrand.id)\n    formData.append('typeId', device.selectedType.id)\n    formData.append('info', JSON.stringify(info))\n    createDevice(formData).then(data => onHide())\n  }\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить товар\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <div className=\"d-flex flex-wrap\">\n            <Dropdown className=\"mr-2\">\n              <Dropdown.Toggle variant=\"info\">{device.selectedType.name || \"Тип стройматериала...\"}</Dropdown.Toggle>\n              <Dropdown.Menu>\n                {device.types.map(type =>\n                  <Dropdown.Item\n                    onClick={() => device.setSelectedType(type)}\n                    key={type.id}\n                  >\n                    {type.name}\n                  </Dropdown.Item>\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n            {/* <Form.Control type=\"text\" list=\"data\" placeholder=\"Категория...\" />\n            <datalist id=\"data\">\n              {['908gbjmn', '334dgdfs', '3asrfsda'].map((item, key) =>\n                <option key={key} value={item} />\n              )}\n            </datalist> */}\n            <Dropdown className=\"\">\n              <Dropdown.Toggle variant=\"info\">{device.selectedBrand.name || \"Поставщик...\"}</Dropdown.Toggle>\n              <Dropdown.Menu>\n                {device.brands.map(brand =>\n                  <Dropdown.Item\n                    onClick={() => device.setSelectedBrand(brand)}\n                    key={brand.id}\n                  >\n                    {brand.name}\n                  </Dropdown.Item>\n                )}\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n          <Form.Control\n            className=\"mt-3\"\n            type=\"file\"\n            onChange={selectFile}\n          />\n          <FloatingLabel\n            controlId=\"floatingInput\"\n            label=\"Введите название товара\"\n            className=\"mt-3\"\n          >\n            <Form.Control\n              value={name}\n              onChange={e => setName(e.target.value)}\n              placeholder=\"Введите название товара\"\n            />\n          </FloatingLabel>\n          <FloatingLabel controlId=\"floatingTextarea\" label=\"Введите описание товара\" className=\"mt-3\">\n            <Form.Control\n              as=\"textarea\"\n              value={description}\n              onChange={e => setDescription(e.target.value)}\n              placeholder=\"Введите описание товара\"\n            />\n          </FloatingLabel>\n          <Form.Label className=\"mt-3\">Введите:</Form.Label>\n          <Row className=\"g-2\">\n            <Col md>\n              <Form.Control\n                value={price}\n                onChange={e => setPrice(Number(e.target.value))}\n                type=\"number\"\n                placeholder=\"стоимость в рублях\"\n\n              />\n            </Col>\n            <Col md>\n              <Form.Control\n                value={count}\n                onChange={e => setCount(Number(e.target.value))}\n\n                placeholder=\"кол-во материала\"\n                type=\"number\"\n              />\n            </Col>\n          </Row>\n\n          <hr />\n          <Button\n            variant={\"outline-dark\"}\n            onClick={addInfo}\n          >\n            Добавить характеристику\n          </Button>\n          {info.map(i =>\n            <Row className=\"mt-4\" key={i.number}>\n              <Col md={4}>\n                <Form.Control\n                  value={i.title}\n                  onChange={(e) => changeInfo('title', e.target.value, i.number)}\n                  placeholder=\"Введите название свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Form.Control\n                  value={i.description}\n                  onChange={(e) => changeInfo('description', e.target.value, i.number)}\n                  placeholder=\"Введите описание свойства\"\n                />\n              </Col>\n              <Col md={4}>\n                <Button\n                  onClick={() => removeInfo(i.number)}\n                  variant={\"outline-danger\"}\n                >\n                  Удалить\n                </Button>\n              </Col>\n            </Row>\n          )}\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addDevice}>Добавить</Button>\n      </Modal.Footer>\n    </Modal >\n  );\n});\n\nexport default CreateDevice;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/modals/CreateBrand.js",["256"],"import React, { useState } from 'react';\nimport Modal from \"react-bootstrap/Modal\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { createBrand, createType } from \"../../http/deviceAPI\";\n\nconst CreateBrand = ({ show, onHide }) => {\n  const [value, setValue] = useState('')\n\n  const addBrand = () => {\n    createBrand({ name: value }).then(data => {\n      setValue('')\n      onHide()\n    })\n  }\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Добавить поставщика\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Form>\n          <Form.Control\n            value={value}\n            onChange={e => setValue(e.target.value)}\n            placeholder={\"Введите нового поставщика\"}\n          />\n        </Form>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\n        <Button variant=\"outline-success\" onClick={addBrand}>Добавить</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default CreateBrand;\n","/home/tyhroilinux/Projects/FullStack/СтройМагазин/client/src/components/DeviceItem.js",["257"],"import React from 'react';\nimport { useHistory } from \"react-router-dom\"\nimport { Card, Col, Button, Badge, Image } from \"react-bootstrap\";\nimport { DEVICE_ROUTE } from \"../utils/consts\";\n\nconst DeviceItem = ({ device }) => {\n  const history = useHistory()\n  return (\n    <Col xl={3} md={4} sm={6}\n      onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}\n      style={{ cursor: 'pointer' }}\n      title={device.description}\n    >\n      <Card className=\"p-4 d-flex flex-column justify-content-between h-100\"\n      >\n        <Image className=\"mx-auto\"\n          width={200} height={200} src={process.env.REACT_APP_API_URL + device.img} />\n        <div className=\"mt-1\">\n          <small className=\"text-secondary mb-1 d-block\">Код {device.id} </small>\n          <p>{device.name}</p>\n        </div>\n        <div className=\"d-flex mb-2 align-items-center\">\n          <p\n            className=\"text-dark mb-0 mr-2\"\n            style={{\n              'font-size': '20px',\n            }} >\n            {device.price}₽\n          </p>\n          <Badge bg=\"secondary\">за 1 шт.</Badge>\n        </div>\n        <p className=\"text-secondary mb-0\">На складе ост.: {device.count} шт.</p>\n      </Card>\n    </Col>\n  );\n};\n\nexport default DeviceItem;\n",{"ruleId":"258","replacedBy":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","severity":1,"message":"263","line":20,"column":6,"nodeType":"264","endLine":20,"endColumn":8,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":26,"column":9,"nodeType":"268","messageId":"269","endLine":26,"endColumn":13},{"ruleId":"266","severity":1,"message":"270","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":15},{"ruleId":"262","severity":1,"message":"271","line":12,"column":6,"nodeType":"264","endLine":12,"endColumn":8,"suggestions":"272"},{"ruleId":"273","severity":1,"message":"274","line":41,"column":17,"nodeType":"275","endLine":41,"endColumn":29},{"ruleId":"276","severity":1,"message":"277","line":41,"column":29,"nodeType":"275","endLine":41,"endColumn":96},{"ruleId":"273","severity":1,"message":"274","line":42,"column":17,"nodeType":"275","endLine":42,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":45,"column":17,"nodeType":"275","endLine":45,"endColumn":29},{"ruleId":"276","severity":1,"message":"277","line":45,"column":29,"nodeType":"275","endLine":45,"endColumn":96},{"ruleId":"273","severity":1,"message":"274","line":46,"column":17,"nodeType":"275","endLine":46,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":49,"column":17,"nodeType":"275","endLine":49,"endColumn":29},{"ruleId":"276","severity":1,"message":"277","line":49,"column":29,"nodeType":"275","endLine":49,"endColumn":96},{"ruleId":"273","severity":1,"message":"274","line":50,"column":17,"nodeType":"275","endLine":50,"endColumn":29},{"ruleId":"273","severity":1,"message":"274","line":53,"column":17,"nodeType":"275","endLine":53,"endColumn":29},{"ruleId":"276","severity":1,"message":"277","line":53,"column":29,"nodeType":"275","endLine":53,"endColumn":96},{"ruleId":"273","severity":1,"message":"274","line":54,"column":17,"nodeType":"275","endLine":54,"endColumn":29},{"ruleId":"266","severity":1,"message":"278","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":11},{"ruleId":"266","severity":1,"message":"279","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":11},{"ruleId":"262","severity":1,"message":"280","line":23,"column":6,"nodeType":"264","endLine":23,"endColumn":8,"suggestions":"281"},{"ruleId":"262","severity":1,"message":"280","line":30,"column":6,"nodeType":"264","endLine":30,"endColumn":63,"suggestions":"282"},{"ruleId":"266","severity":1,"message":"283","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":11,"column":29,"nodeType":"286","messageId":"287","endLine":11,"endColumn":44},{"ruleId":"266","severity":1,"message":"279","line":4,"column":8,"nodeType":"268","messageId":"269","endLine":4,"endColumn":11},{"ruleId":"266","severity":1,"message":"288","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":14},{"ruleId":"266","severity":1,"message":"289","line":5,"column":49,"nodeType":"268","messageId":"269","endLine":5,"endColumn":61},{"ruleId":"262","severity":1,"message":"280","line":22,"column":6,"nodeType":"264","endLine":22,"endColumn":8,"suggestions":"290"},{"ruleId":"266","severity":1,"message":"291","line":4,"column":23,"nodeType":"268","messageId":"269","endLine":4,"endColumn":33},{"ruleId":"258","replacedBy":"292"},{"ruleId":"260","replacedBy":"293"},{"ruleId":"262","severity":1,"message":"263","line":20,"column":6,"nodeType":"264","endLine":20,"endColumn":8,"suggestions":"294"},{"ruleId":"266","severity":1,"message":"295","line":16,"column":9,"nodeType":"268","messageId":"269","endLine":16,"endColumn":15},{"ruleId":"262","severity":1,"message":"271","line":15,"column":6,"nodeType":"264","endLine":15,"endColumn":8,"suggestions":"296"},{"ruleId":"262","severity":1,"message":"280","line":21,"column":6,"nodeType":"264","endLine":21,"endColumn":8,"suggestions":"297"},{"ruleId":"262","severity":1,"message":"280","line":28,"column":6,"nodeType":"264","endLine":28,"endColumn":62,"suggestions":"298"},{"ruleId":"262","severity":1,"message":"280","line":20,"column":6,"nodeType":"264","endLine":20,"endColumn":8,"suggestions":"299"},{"ruleId":"266","severity":1,"message":"283","line":2,"column":8,"nodeType":"268","messageId":"269","endLine":2,"endColumn":18},{"ruleId":"300","severity":1,"message":"301","line":8,"column":64,"nodeType":"302","messageId":"303","endLine":8,"endColumn":66},{"ruleId":"262","severity":1,"message":"280","line":20,"column":6,"nodeType":"264","endLine":20,"endColumn":8,"suggestions":"304"},{"ruleId":"266","severity":1,"message":"291","line":4,"column":23,"nodeType":"268","messageId":"269","endLine":4,"endColumn":33},{"ruleId":"266","severity":1,"message":"305","line":3,"column":21,"nodeType":"268","messageId":"269","endLine":3,"endColumn":27},"no-native-reassign",["306"],"no-negated-in-lhs",["307"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["308"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","'bigStar' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["309"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Row' is defined but never used.","'Col' is defined but never used.","React Hook useEffect has a missing dependency: 'device'. Either include it or remove the dependency array.",["310"],["311"],"'jwt_decode' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'Card' is defined but never used.","'fetchDevices' is defined but never used.",["312"],"'createType' is defined but never used.",["306"],["307"],["313"],"'logOut' is assigned a value but never used.",["314"],["315"],["316"],["317"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["318"],"'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"319","fix":"320"},{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"323","fix":"327"},{"desc":"319","fix":"328"},{"desc":"321","fix":"329"},{"desc":"323","fix":"330"},{"desc":"325","fix":"331"},{"desc":"323","fix":"332"},{"desc":"323","fix":"333"},"Update the dependencies array to be: [user]",{"range":"334","text":"335"},"Update the dependencies array to be: [id]",{"range":"336","text":"337"},"Update the dependencies array to be: [device]",{"range":"338","text":"339"},"Update the dependencies array to be: [device.page, device.selectedType, device.selectedBrand, device]",{"range":"340","text":"341"},{"range":"342","text":"339"},{"range":"343","text":"335"},{"range":"344","text":"337"},{"range":"345","text":"339"},{"range":"346","text":"341"},{"range":"347","text":"339"},{"range":"348","text":"339"},[684,686],"[user]",[468,470],"[id]",[853,855],"[device]",[1061,1118],"[device.page, device.selectedType, device.selectedBrand, device]",[934,936],[684,686],[529,531],[796,798],[1004,1060],[851,853],[835,837]]